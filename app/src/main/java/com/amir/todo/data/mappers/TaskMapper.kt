package com.amir.todo.data.mappersimport amir.tododb.GetAllTasksimport amir.tododb.GetTaskByIdimport amir.tododb.SubTaskEntityimport amir.tododb.TaskEntityimport android.os.Buildimport androidx.annotation.RequiresApiimport androidx.compose.ui.graphics.Colorimport androidx.core.graphics.toColorIntimport com.amir.todo.domain.model.Categoryimport com.amir.todo.domain.model.Reminderimport com.amir.todo.domain.model.Taskimport java.time.LocalDate// Domain -> Entityfun Task.toEntity(): TaskEntity {    return TaskEntity(        id = id.toLong(),        title = title,        isDone = if (isDone) 1 else 0,        date = date.toString(),        description = description,        important = if (important) 1 else 0,        categoryId = category.id.toLong()    )}// Entity -> Domain@RequiresApi(Build.VERSION_CODES.O)fun GetAllTasks.toDomain(): Task {    return Task(        id = id.toInt(),        title = title,        isDone = isDone == 1L,        date = LocalDate.parse(date),        description = description,        important = important == 1L,        category = Category(            id = category_id.toInt(),            title = category_title,            color = Color(category_color.toColorInt())        ),        reminder = Reminder.default(),        subTask = emptyList()    )}// Entity -> Domain@RequiresApi(Build.VERSION_CODES.O)fun GetTaskById.toDomain(subTasks: List<SubTaskEntity>): Task {    return Task(        id = task_id.toInt(),        title = task_title,        isDone = task_is_done == 1L,        description = task_description,        date = LocalDate.parse(task_date),        important = task_important == 1L,        category = Category(            id = category_id?.toInt() ?: 0,            title = category_title ?: "",            color = Color(category_color?.toColorInt() ?: 0)        ),        reminder = if (reminder_task_id != null)            Reminder(                timeBefore = reminder_time_before ?: 0L,                isEnabled = reminder_is_enabled == 1L            )        else Reminder.default(),        subTask = subTasks.map { it.toDomain() },    )}