package com.amir.todo.domain.UseCasesimport com.amir.todo.domain.Repository.TodoRepositoryimport com.amir.todo.domain.model.Taskimport com.amir.todo.util.ErrorTypeimport com.amir.todo.util.Stateimport java.sql.SQLExceptionclass AddTaskUseCase(    private val repository: TodoRepository) {    suspend operator fun invoke(task: Task): State<Task> {        return try {            State.Loading(repository.addTask(task))            State.Success(repository.addTask(task))        } catch (e: SQLException) {            State.Error(                ErrorType.DataBase(message = e.message ?: "DataBase Failed")            )        } catch (e: Exception) {            State.Error(                ErrorType.Unknown(message = e.message ?: "Unknown error")            )        }    }}