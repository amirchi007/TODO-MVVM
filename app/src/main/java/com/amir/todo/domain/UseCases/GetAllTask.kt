package com.amir.todo.domain.UseCasesimport com.amir.todo.domain.Repository.TodoRepositoryimport com.amir.todo.domain.model.Taskimport com.amir.todo.util.ErrorTypeimport com.amir.todo.util.Stateimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.flowimport java.sql.SQLExceptionclass GetAllTask(    private val repository: TodoRepository) {    operator fun invoke(): Flow<State<List<Task>>> = flow {        try {            emit(State.Loading())            repository.getAllTask().collect {                emit(State.Success(it))            }        } catch (e: SQLException) {            emit(                State.Error(                    ErrorType.DataBase(                        message = e.message ?: "DataBase failed"                    )                )            )        } catch (e: Exception) {            emit(                State.Error(                    ErrorType.Unknown(                        message = e.message ?: "Un known error"                    )                )            )        }    }}