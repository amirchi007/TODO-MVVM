package com.amir.todo.domain.UseCasesimport android.net.http.HttpExceptionimport android.os.Buildimport androidx.annotation.RequiresExtensionimport com.amir.todo.domain.Repository.TodoRepositoryimport com.amir.todo.domain.model.Taskimport com.amir.todo.util.ErrorTypeimport com.amir.todo.util.StateManagementimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.flowclass GetAllTaskUseCase(    private val repository: TodoRepository) {    @RequiresExtension(extension = Build.VERSION_CODES.S, version = 7)    operator fun invoke(): Flow<StateManagement<List<Task>>> = flow {        try {            emit(StateManagement.Loading<List<Task>>())            repository.getAllTask().collect {                emit(StateManagement.Success(it))            }        } catch (e: HttpException) {            emit(                StateManagement.Error(                    ErrorType.Network(                        code = 502,                        message = e.message ?: "Network failed"                    ).toString()                )            )        } catch (e: Exception) {            emit(StateManagement.Error<List<Task>>(e.message.toString()))        }    }}